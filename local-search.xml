<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Waline评论系统的使用</title>
    <link href="/post/da27ec23.html"/>
    <url>/post/da27ec23.html</url>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210111443690.png" alt="image-20221011144308113"></p>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pdf查看</title>
    <link href="/post/48a0f817.html"/>
    <url>/post/48a0f817.html</url>
    
    <content type="html"><![CDATA[<h1 id="此种方法只支持pc显示"><a href="#此种方法只支持pc显示" class="headerlink" title="此种方法只支持pc显示"></a>此种方法只支持pc显示</h1><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm">&#123;% pdf &#x27;https://pdf<span class="hljs-number">-1310995062</span>.cos.ap-nanjing.myqcloud.com/SpringBoot<span class="hljs-variable">%E5</span><span class="hljs-variable">%AD</span><span class="hljs-variable">%A6</span><span class="hljs-variable">%E4</span><span class="hljs-variable">%B9</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%E7</span><span class="hljs-variable">%AC</span><span class="hljs-variable">%94</span><span class="hljs-variable">%E8</span><span class="hljs-variable">%AE</span><span class="hljs-variable">%B0.pdf</span>&#x27; %&#125;<br><br></code></pre></td></tr></table></figure><div class="row">    <embed src="https://pdf-1310995062.cos.ap-nanjing.myqcloud.com/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="此方法不能加载pdf"><a href="#此方法不能加载pdf" class="headerlink" title="此方法不能加载pdf"></a>此方法不能加载pdf</h1><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs llvm">&lt;iframe src<span class="hljs-operator">=</span>&#x27;/js/pdfjs/web/viewer.html?file<span class="hljs-operator">=</span>https://pdf<span class="hljs-number">-1310995062</span>.cos.ap-nanjing.myqcloud.com/SpringBoot<span class="hljs-variable">%E5</span><span class="hljs-variable">%AD</span><span class="hljs-variable">%A6</span><span class="hljs-variable">%E4</span><span class="hljs-variable">%B9</span><span class="hljs-variable">%A0</span><span class="hljs-variable">%E7</span><span class="hljs-variable">%AC</span><span class="hljs-variable">%94</span><span class="hljs-variable">%E8</span><span class="hljs-variable">%AE</span><span class="hljs-variable">%B0.pdf</span>&#x27; <br>style<span class="hljs-operator">=</span>&#x27;width:<span class="hljs-number">100</span>%<span class="hljs-comment">;height:100%&#x27;&gt;&lt;/iframe&gt;</span><br></code></pre></td></tr></table></figure><iframe src='/js/pdfjs/web/viewer.html?file=https://pdf-1310995062.cos.ap-nanjing.myqcloud.com/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.pdf' style='width:100%;height:100%'></iframe><h1 id="此方法显示区域太小"><a href="#此方法显示区域太小" class="headerlink" title="此方法显示区域太小"></a>此方法显示区域太小</h1><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">&lt;embed src=<span class="hljs-string">&quot;https://pdf-1310995062.cos.ap-nanjing.myqcloud.com/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.pdf&quot;</span> type=<span class="hljs-string">&quot;application/pdf&quot;</span> width=<span class="hljs-string">&quot;100%&quot; height=&quot;</span><span class="hljs-number">100</span>%&quot;&gt;  <br></code></pre></td></tr></table></figure><embed src="https://pdf-1310995062.cos.ap-nanjing.myqcloud.com/SpringBoot%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.pdf" type="application/pdf" width="100%" height="100%">  ]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker常用命令</title>
    <link href="/post/749ad7d8.html"/>
    <url>/post/749ad7d8.html</url>
    
    <content type="html"><![CDATA[<figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">console</span><br><br></code></pre></td></tr></table></figure><h1 id="1-Docker中文件挂载启动命令"><a href="#1-Docker中文件挂载启动命令" class="headerlink" title="1.Docker中文件挂载启动命令"></a>1.Docker中文件挂载启动命令</h1><h2 id="1-1挂载方式1—-数据卷挂载"><a href="#1-1挂载方式1—-数据卷挂载" class="headerlink" title="1.1挂载方式1—-数据卷挂载"></a>1.1挂载方式1—-数据卷挂载</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript">docker run <span class="hljs-string">\</span><br>  --name nginx <span class="hljs-string">\</span><br>  -v html:/root/html <span class="hljs-string">\</span><br>  -p <span class="hljs-number">8081</span>:<span class="hljs-number">80</span><span class="hljs-string">\</span><br>  nginx <br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 查看html数据卷的位置</span><br>docker volume inspect html<br><span class="hljs-comment"># 进入该目录</span><br>cd <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/docker/</span>volumes<span class="hljs-regexp">/html/</span>_data<br><span class="hljs-comment"># 修改文件</span><br>vim index.html<br></code></pre></td></tr></table></figure><h2 id="1-2挂载方式2—-目录直接挂载"><a href="#1-2挂载方式2—-目录直接挂载" class="headerlink" title="1.2挂载方式2—-目录直接挂载"></a>1.2挂载方式2—-目录直接挂载</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run\<br>--name mysql\<br>    -e MYSQL_ROOT_PASSWORD=root\<br>    -p <span class="hljs-number">33061</span>:<span class="hljs-number">3306</span>\<br>    -v <span class="hljs-regexp">/tmp/my</span>sql<span class="hljs-regexp">/conf/</span>hmy.cnf:<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/conf.d/</span>hmy.cnf\<br>    -v <span class="hljs-regexp">/tmp/my</span>sql<span class="hljs-regexp">/data:/</span>var<span class="hljs-regexp">/lib/my</span>sql\<br>    -d mysql<br></code></pre></td></tr></table></figure><h1 id="2-自定义Docker镜像"><a href="#2-自定义Docker镜像" class="headerlink" title="2.自定义Docker镜像"></a>2.自定义Docker镜像</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker build -<span class="hljs-keyword">tag</span> <span class="hljs-title">镜像名称:版本 .(.代表dockerfile</span>所在的目录) 名称必须是小写，不然会报以下错误<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build -t javawebdemo:<span class="hljs-number">1</span>.<span class="hljs-number">0</span> .<br></code></pre></td></tr></table></figure><p><u><strong>invalid argument “javawebDemo:1.0” for “-t, –tag” flag: invalid reference format: repository name must be lowercase</u></strong></p><p><strong><u>无效参数“javawebDemo:1.0”的“-t，——tag”标志:无效的引用格式:存储库名称必须是小写的</strong></u></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">运行：<br>docker <span class="hljs-built_in">run</span> <span class="hljs-comment">--name web -p 8090:8090 -d javawebdemo:1.0</span><br></code></pre></td></tr></table></figure><h1 id="3-DockerCompose安装"><a href="#3-DockerCompose安装" class="headerlink" title="3.DockerCompose安装"></a>3.DockerCompose安装</h1><h2 id="3-1-下载"><a href="#3-1-下载" class="headerlink" title="3.1.下载"></a>3.1.下载</h2><p>Linux下需要通过命令下载：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 安装</span><br>curl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`<span class="hljs-built_in">uname</span> -s`-`<span class="hljs-built_in">uname</span> -m` &gt; /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><p>如果下载速度较慢，或者下载失败，可以使用课前资料提供的docker-compose文件：</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082209501.png" alt="image-20210417133020614"></p><p>上传到<code>/usr/local/bin/</code>目录也可以。</p><h2 id="3-2-修改文件权限"><a href="#3-2-修改文件权限" class="headerlink" title="3.2.修改文件权限"></a>3.2.修改文件权限</h2><p>修改文件权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 修改权限</span><br><span class="hljs-built_in">chmod</span> +x /usr/local/bin/docker-compose<br></code></pre></td></tr></table></figure><h2 id="3-3-Base自动补全命令"><a href="#3-3-Base自动补全命令" class="headerlink" title="3.3.Base自动补全命令"></a>3.3.Base自动补全命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 补全命令</span><br>curl -L https://raw.githubusercontent.com/docker/compose/1.29.1/contrib/completion/bash/docker-compose &gt; /etc/bash_completion.d/docker-compose<br></code></pre></td></tr></table></figure><p>如果这里出现错误，需要修改自己的hosts文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;199.232.68.133 raw.githubusercontent.com&quot;</span> &gt;&gt; /etc/hosts<br></code></pre></td></tr></table></figure><h2 id="3-4-部署集群项目"><a href="#3-4-部署集群项目" class="headerlink" title="3.4.部署集群项目"></a>3.4.部署集群项目</h2><p>进入项目目录，然后运行下面的命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span><br></code></pre></td></tr></table></figure><p>撤销部署：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose down -d</span><br></code></pre></td></tr></table></figure><h1 id="4-Docker中项目部署常用命令"><a href="#4-Docker中项目部署常用命令" class="headerlink" title="4.Docker中项目部署常用命令"></a>4.Docker中项目部署常用命令</h1><ul><li><p>docker run：创建并运行一个容器，处于运行状态</p></li><li><p>docker pause：让一个运行的容器暂停</p></li><li><p>docker unpause：让一个容器从暂停状态恢复运行</p></li><li><p>docker stop：停止一个运行的容器</p></li><li><p>docker start：让一个停止的容器再次运行</p></li><li><p>docker rm：删除一个容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker <span class="hljs-built_in">exec</span> -it mn bash<br></code></pre></td></tr></table></figure><p>命令解读：</p><ul><li><p>docker exec ：进入容器内部，执行一个命令</p></li><li><p>-it : 给当前进入的容器创建一个标准输入、输出终端，允许我们与容器交互</p></li><li><p>mn ：要进入的容器的名称</p></li><li><p>bash：进入容器后执行的命令，bash是一个linux终端交互命令</p></li></ul></li></ul><h1 id="5-Docker镜像仓库"><a href="#5-Docker镜像仓库" class="headerlink" title="5.Docker镜像仓库"></a>5.Docker镜像仓库</h1><p>搭建镜像仓库可以基于Docker官方提供的DockerRegistry来实现。</p><p>官网地址：<a href="https://hub.docker.com/_/registry">https://hub.docker.com/_/registry</a></p><h2 id="5-1-简化版镜像仓库"><a href="#5-1-简化版镜像仓库" class="headerlink" title="5.1.简化版镜像仓库"></a>5.1.简化版镜像仓库</h2><p>Docker官方的Docker Registry是一个基础版本的Docker镜像仓库，具备仓库管理的完整功能，但是没有图形化界面。</p><p>搭建方式比较简单，命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker run -d \<br>    --restart=always \<br>    --name registry\<br>    -p 5000:5000 \<br>    -v registry-data:/var/lib/registry \<br>    registry<br></code></pre></td></tr></table></figure><p>命令中挂载了一个数据卷registry-data到容器内的/var/lib/registry 目录，这是私有镜像库存放数据的目录。</p><p>访问<a href="http://yourip:5000/v2/_catalog">http://YourIp:5000/v2/_catalog</a> 可以查看当前私有镜像服务中包含的镜像</p><h2 id="5-2-带有图形化界面版本"><a href="#5-2-带有图形化界面版本" class="headerlink" title="5.2.带有图形化界面版本"></a>5.2.带有图形化界面版本</h2><p>使用DockerCompose部署带有图象界面的DockerRegistry，命令如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.0&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">registry:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">registry</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./registry-data:/var/lib/registry</span><br>  <span class="hljs-attr">ui:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">joxit/docker-registry-ui:static</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">8080</span><span class="hljs-string">:80</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">REGISTRY_TITLE=传智教育私有仓库</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">REGISTRY_URL=http://registry:5000</span><br>    <span class="hljs-attr">depends_on:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">registry</span><br></code></pre></td></tr></table></figure><h2 id="5-3-配置Docker信任地址"><a href="#5-3-配置Docker信任地址" class="headerlink" title="5.3.配置Docker信任地址"></a>5.3.配置Docker信任地址</h2><p>我们的私服采用的是http协议，默认不被Docker信任，所以需要做一个配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 打开要修改的文件</span><br>vi /etc/docker/daemon.json<br><span class="hljs-comment"># 添加内容：</span><br><span class="hljs-string">&quot;insecure-registries&quot;</span>:[<span class="hljs-string">&quot;http://110.40.220.94:8088&quot;</span>]<br><span class="hljs-comment"># 重加载</span><br>systemctl daemon-reload<br><span class="hljs-comment"># 重启docker</span><br>systemctl restart docker<br></code></pre></td></tr></table></figure><h2 id="5-4-推送、拉取镜像"><a href="#5-4-推送、拉取镜像" class="headerlink" title="5.4.推送、拉取镜像"></a>5.4.推送、拉取镜像</h2><p>推送镜像到私有镜像服务必须先tag，步骤如下：</p><p>① 重新tag本地镜像，名称前缀为私有仓库的地址：192.168.150.101:8080/</p> <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker tag nginx:latest 110.40.220.94:8088/nginx:1.0 <br></code></pre></td></tr></table></figure><p>② 推送镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker push 110.40.220.94:8088/nginx:1.0 <br></code></pre></td></tr></table></figure><p>③ 拉取镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker pull 110.40.220.94:8088/nginx:1.0 <br></code></pre></td></tr></table></figure><h1 id="6-RabbitMQ"><a href="#6-RabbitMQ" class="headerlink" title="6.RabbitMQ"></a>6.RabbitMQ</h1><p><strong>版本需要使用management版本 的，不然没有管理界面</strong></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livescript">docker run <span class="hljs-string">\</span><br> -e RABBITMQ_DEFAULT_USER=root <span class="hljs-string">\</span><br> -e RABBITMQ_DEFAULT_PASS=root <span class="hljs-string">\</span><br> --name rabbitmq <span class="hljs-string">\</span><br> --hostname my-rabbit <span class="hljs-string">\</span><br> -p <span class="hljs-number">15672</span>:<span class="hljs-number">15672</span> <span class="hljs-string">\</span><br> -p <span class="hljs-number">5672</span>:<span class="hljs-number">5672</span> <span class="hljs-string">\</span><br> -d <span class="hljs-string">\</span><br> rabbitmq:management<br></code></pre></td></tr></table></figure><h1 id="7-ElasticSearch"><a href="#7-ElasticSearch" class="headerlink" title="7.ElasticSearch"></a>7.ElasticSearch</h1><h2 id="7-1运行es"><a href="#7-1运行es" class="headerlink" title="7.1运行es"></a>7.1运行es</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d \<br>--name es \<br>    -e <span class="hljs-string">&quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span> \<br>    -e <span class="hljs-string">&quot;discovery.type=single-node&quot;</span> \<br>    -e <span class="hljs-string">&quot;http.host=0.0.0.0&quot;</span> \<br>    -v es-data:<span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/elasticsearch/</span>data \<br>    -v es-plugins:<span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/elasticsearch/</span>plugins \<br>    -v es-logs:<span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/elasticsearch/</span>logs \<br>    --privileged \<br>    --network es-net \<br>    -p <span class="hljs-number">9200</span>:<span class="hljs-number">9200</span> \<br>    elasticsearch:<span class="hljs-number">8.4</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>命令解释：</p><ul><li><code>-e &quot;cluster.name=es-docker-cluster&quot;</code>：设置集群名称</li><li><code>-e &quot;http.host=0.0.0.0&quot;</code>：监听的地址，可以外网访问</li><li><code>-e &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</code>：内存大小</li><li><code>-e &quot;discovery.type=single-node&quot;</code>：非集群模式</li><li><code>-v es-data:/usr/share/elasticsearch/data</code>：挂载逻辑卷，绑定es的数据目录</li><li><code>-v es-logs:/usr/share/elasticsearch/logs</code>：挂载逻辑卷，绑定es的日志目录</li><li><code>-v es-plugins:/usr/share/elasticsearch/plugins</code>：挂载逻辑卷，绑定es的插件目录</li><li><code>--privileged</code>：授予逻辑卷访问权</li><li><code>--network es-net</code> ：加入一个名为es-net的网络中</li><li><code>-p 9200:9200</code>：端口映射配置</li></ul><h2 id="7-2部署kibana"><a href="#7-2部署kibana" class="headerlink" title="7.2部署kibana"></a>7.2部署kibana</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -d \<br>--name kibana \<br>-e <span class="hljs-attribute">ELASTICSEARCH_HOSTS</span>=http://172.18.0.2:9200 \<br><span class="hljs-attribute">--network</span>=es-net \<br>-p 5601:5601  \<br>kibana:8.4.1<br></code></pre></td></tr></table></figure><p>控制台不能连接9200的解决办法：</p><ul><li><p>进入ES容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it elasticsearch /bin/bash<br></code></pre></td></tr></table></figure></li><li><p>查看ip（docker内部局域网的ip）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/hosts<br></code></pre></td></tr></table></figure><p>我们将看到下面的内容：<br><img src="https://img-blog.csdnimg.cn/20200925134424472.png#pic_center" alt="在这里插入图片描述"></p><p>我们可以知道es容器在docker中的ip是<code>172.17.0.3</code></p></li><li><p>接下来就可以根据这个ip来创建容器啦</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -it -d -e <span class="hljs-attribute">ELASTICSEARCH_URL</span>=http://172.17.0.3:9200 --name kibana -p 5601:5601 kibana<br></code></pre></td></tr></table></figure></li></ul><h2 id="7-3离线安装ik插件（推荐）"><a href="#7-3离线安装ik插件（推荐）" class="headerlink" title="7.3离线安装ik插件（推荐）"></a>7.3离线安装ik插件（推荐）</h2><h3 id="1）查看数据卷目录"><a href="#1）查看数据卷目录" class="headerlink" title="1）查看数据卷目录"></a>1）查看数据卷目录</h3><p>安装插件需要知道elasticsearch的plugins目录位置，而我们用了数据卷挂载，因此需要查看elasticsearch的数据卷目录，通过下面命令查看:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker volume inspect es-plugins<br></code></pre></td></tr></table></figure><p>显示结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;CreatedAt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-05-06T10:06:34+08:00&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Driver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;local&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Labels&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Mountpoint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/var/lib/docker/volumes/es-plugins/_data&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;es-plugins&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Options&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;Scope&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;local&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p>说明plugins目录被挂载到了：<code>/var/lib/docker/volumes/es-plugins/_data </code>这个目录中。</p><h3 id="2）解压缩分词器安装包"><a href="#2）解压缩分词器安装包" class="headerlink" title="2）解压缩分词器安装包"></a>2）解压缩分词器安装包</h3><p>下面我们需要把课前资料中的ik分词器解压缩，重命名为ik</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082210463.png" alt="image-20210506110249144"></p><h3 id="3）上传到es容器的插件数据卷中"><a href="#3）上传到es容器的插件数据卷中" class="headerlink" title="3）上传到es容器的插件数据卷中"></a>3）上传到es容器的插件数据卷中</h3><p>也就是<code>/var/lib/docker/volumes/es-plugins/_data </code>：</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082210064.png" alt="image-20210506110704293"></p><h3 id="4）重启容器"><a href="#4）重启容器" class="headerlink" title="4）重启容器"></a>4）重启容器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">4、重启容器</span><br>docker restart es<br></code></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># 查看es日志</span><br>docker logs -f es<br></code></pre></td></tr></table></figure><h3 id="5）测试："><a href="#5）测试：" class="headerlink" title="5）测试："></a>5）测试：</h3><p>IK分词器包含两种模式：</p><ul><li><p><code>ik_smart</code>：最少切分</p></li><li><p><code>ik_max_word</code>：最细切分</p></li></ul><h2 id="7-4问题解决-—-gt-分词器没有挂在到plugins目录下"><a href="#7-4问题解决-—-gt-分词器没有挂在到plugins目录下" class="headerlink" title="7.4问题解决 —-&gt;分词器没有挂在到plugins目录下"></a>7.4问题解决 —-&gt;分词器没有挂在到plugins目录下</h2><p>\5. 进入<a href="https://so.csdn.net/so/search?q=docker&spm=1001.2101.3001.7020">docker</a> 安装elasticSearch 的容器 查看plugins</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it elasticsearch /bin/bash<br><span class="hljs-built_in">cd</span> plugins <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114111732680.png#pic_center" alt="在这里插入图片描述"><br>6.查看当前的路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">pwd</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114111914484.png#pic_center" alt="在这里插入图片描述"><br>7.回到解压ik<a href="https://so.csdn.net/so/search?q=%E5%88%86%E8%AF%8D&spm=1001.2101.3001.7020">分词</a>器的目录，copy到容器中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">cp</span> ik elasticsearch:/usr/share/elasticsearch/plugins<br>参数说明；elasticsearch docker容器名称<br>/usr/share/elasticsearch/plugins 容器所在的位置<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201114112021510.png#pic_center" alt="在这里插入图片描述"><br>\8. 查看plugins 是否成功</p><p><img src="https://img-blog.csdnimg.cn/20201114112239518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMDQ5MzEw,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>9.重起elasticSearch 容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker restart elasticseacher<br></code></pre></td></tr></table></figure><h3 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h3><p>进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it elasticsearch /bin/bash<br></code></pre></td></tr></table></figure><p>在线下载并安装</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal">./bin/elasticsearch-plugin install <span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/github.com/medcl</span><span class="hljs-regexp">/elasticsearch-analysis-ik/releases</span><span class="hljs-regexp">/download/v</span>8.<span class="hljs-number">4.1</span>/elasticsearch-analysis-ik-<span class="hljs-number">8.4</span>.<span class="hljs-number">1</span>.zip<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/316924125878132d289dc7ea3bf99b70.png" alt="img"></p><p>进入plugins可以看到IK分词器已经安装成功</p><p><img src="https://img-blog.csdnimg.cn/img_convert/241af36b392cf1a09e169c5e45b5b600.png" alt="img"></p><h3 id="安装拼音分词插件"><a href="#安装拼音分词插件" class="headerlink" title="安装拼音分词插件"></a>安装拼音分词插件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/bin/</span>elasticsearch-plugin install https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/medcl/</span>elasticsearch-analysis-pinyin<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v8.4.1/</span>elasticsearch-analysis-pinyin-<span class="hljs-number">8.4</span>.<span class="hljs-number">1</span>.zip<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>软件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器搭建</title>
    <link href="/post/cb9cca01.html"/>
    <url>/post/cb9cca01.html</url>
    
    <content type="html"><![CDATA[<h1 id="Centos配置Java8环境"><a href="#Centos配置Java8环境" class="headerlink" title="Centos配置Java8环境"></a>Centos配置Java8环境</h1><p>卸载jdk</p><p>1、先输入java -version 查看是否安装了jdk</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">java -<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><p>2、如果安装了，检查下安装的路径 which java（查看JDK的安装路径）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> java<br></code></pre></td></tr></table></figure><p>3、卸载 rm -rf JDK地址（卸载JDK）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/usr/</span>java<span class="hljs-regexp">/jdk/</span>jdk1.<span class="hljs-number">8.0</span>_65/<br></code></pre></td></tr></table></figure><p>4、vim命令编辑文件profile</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><p>1.上传并解压</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082204956.png" alt="image-20220906220816921"></p><p>2.编辑配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>profile 并添加下列语句<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_HOME=/opt/java/jdk1.8.0_211<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$JAVA_HOME</span>/bin<br><span class="hljs-built_in">export</span> CLASSPATH=.:<span class="hljs-variable">$JAVA_HIOME</span>/jre/lib/rt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar<br></code></pre></td></tr></table></figure><p>重载配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><p>查看是否配置成功</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">Java-<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082204503.png" alt="image-20220906221246518"></p><h1 id="Centos配置MySql"><a href="#Centos配置MySql" class="headerlink" title="Centos配置MySql"></a>Centos配置MySql</h1><p>1.上传MySQL压缩包并解压重命名</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082204392.png" alt="image-20220906224442525"></p><p>2.编写配置文件</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082204469.png" alt="image-20220906225518458"></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># vi <span class="hljs-regexp">/etc/my</span>.cnf<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># 设置mysql客户端默认字符集</span><br><span class="hljs-attribute">default-character-set</span>=utf8 <br><span class="hljs-attribute">socket</span>=/var/lib/mysql/mysql.sock<br><br>[mysqld]<br>skip-name-resolve<br><span class="hljs-comment">#设置3306端口</span><span class="hljs-built_in"></span><br><span class="hljs-built_in">port </span>= 3306 <br><span class="hljs-attribute">socket</span>=/var/lib/mysql/mysql.sock<br><span class="hljs-comment"># 设置mysql的安装目录, 这里的目录一定要是你解压后并且改了名的目录哟..</span><br><span class="hljs-attribute">basedir</span>=/usr/local/mysql-5.5.40<br><span class="hljs-comment"># 设置mysql数据库的数据的存放目录, 这里的目录一定要是你解压后并且改了名的目录哟..</span><br><span class="hljs-attribute">datadir</span>=/usr/local/mysql-5.5.40/data<br><span class="hljs-comment"># 允许最大连接数</span><br><span class="hljs-attribute">max_connections</span>=200<br><span class="hljs-comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="hljs-attribute">character-set-server</span>=utf8<br><span class="hljs-comment"># 创建新表时将使用的默认存储引擎</span><br><span class="hljs-attribute">default-storage-engine</span>=INNODB<br><span class="hljs-attribute">lower_case_table_name</span>=1<br><span class="hljs-attribute">max_allowed_packet</span>=16M<br></code></pre></td></tr></table></figure><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082204973.png" alt="image-20220907004719041"></p><h1 id="服务器配置HTTPS访问"><a href="#服务器配置HTTPS访问" class="headerlink" title="服务器配置HTTPS访问"></a>服务器配置HTTPS访问</h1><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082204050.png" alt="image-20220907161559932"></p><p>修改 <code>server.xml</code> 文件 <code>Connector</code>的属性为以下内容：                                                                                                       </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;Connector <span class="hljs-attribute">port</span>=<span class="hljs-string">&quot;443&quot;</span>  <br><span class="hljs-attribute">protocol</span>=<span class="hljs-string">&quot;HTTP/1.1&quot;</span><br>    <span class="hljs-attribute">SSLEnabled</span>=<span class="hljs-string">&quot;true&quot;</span><br>    <span class="hljs-attribute">scheme</span>=<span class="hljs-string">&quot;https&quot;</span><br>    <span class="hljs-attribute">secure</span>=<span class="hljs-string">&quot;true&quot;</span><br>    <span class="hljs-attribute">keystoreFile</span>=<span class="hljs-string">&quot;/usr/*/conf/cloud.tencent.com.pfx&quot;</span> #证书保存的路径<br>    <span class="hljs-attribute">keystoreType</span>=<span class="hljs-string">&quot;PKCS12&quot;</span><br>    <span class="hljs-attribute">keystorePass</span>=<span class="hljs-string">&quot;证书密码&quot;</span>  # 请替换为 keystorePass.txt 密码文件中的内容。<br>    <span class="hljs-attribute">clientAuth</span>=<span class="hljs-string">&quot;false&quot;</span><br>    <span class="hljs-attribute">SSLProtocol</span>=<span class="hljs-string">&quot;TLSv1.1+TLSv1.2+TLSv1.3&quot;</span>   <span class="hljs-attribute">ciphers</span>=<span class="hljs-string">&quot;TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256&quot;</span>/&gt;<br></code></pre></td></tr></table></figure><p>配置文件的主要参数说明如下：</p><ul><li><strong>keystoreFile</strong>：证书文件的存放位置，可以指定绝对路径，也可以指定相对于  <CATALINA_HOME> （Tomcat 安装目录）环境变量的相对路径。如果此项没有设定，默认情况下，Tomcat  将从当前操作系统用户的用户目录下读取名为 “.keystore” 的文件。</li><li><strong>keystorePass</strong>：密码文件密码，指定 keystore 的密码。申请证书时若设置了私钥密码，请填写私钥密码；若申请证书时未设置私钥密码，请填写<code>cloud.tencent.com_tomcat</code> 文件夹中 keystorePass.txt 文件内的密码。</li><li><strong>clientAuth</strong>：如果设为 true，表示 Tomcat 要求所有的 SSL 客户出示安全证书，对 SSL 客户进行身份验证。</li></ul><h4 id="HTTP-自动跳转-HTTPS-的安全配置（可选）"><a href="#HTTP-自动跳转-HTTPS-的安全配置（可选）" class="headerlink" title="HTTP 自动跳转 HTTPS 的安全配置（可选）"></a>HTTP 自动跳转 HTTPS 的安全配置（可选）</h4><p>如果您需要将 HTTP 请求自动重定向到 HTTPS。您可以通过以下操作设置：</p><p>编辑  <code>/usr/*/conf</code> 目录下的 <code>web.xml</code> 文件，找到 </welcome-file-list> 标签。</p><p>请在结束标签 </welcome-file-list> 后面换行，并添加以下内容                                                                                                               </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">login-config</span>&gt;</span>  <br>    <span class="hljs-comment">&lt;!-- Authorization setting for SSL --&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">auth-method</span>&gt;</span>CLIENT-CERT<span class="hljs-tag">&lt;/<span class="hljs-name">auth-method</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">realm-name</span>&gt;</span>Client Cert Users-only Area<span class="hljs-tag">&lt;/<span class="hljs-name">realm-name</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">login-config</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">security-constraint</span>&gt;</span>  <br>    <span class="hljs-comment">&lt;!-- Authorization setting for SSL --&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">web-resource-collection</span> &gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">web-resource-name</span> &gt;</span>SSL<span class="hljs-tag">&lt;/<span class="hljs-name">web-resource-name</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">web-resource-collection</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">user-data-constraint</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">transport-guarantee</span>&gt;</span>CONFIDENTIAL<span class="hljs-tag">&lt;/<span class="hljs-name">transport-guarantee</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">user-data-constraint</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">security-constraint</span>&gt;</span><br></code></pre></td></tr></table></figure><p>编辑 server.xml</p><p> 文件，将 redirectPort 参数修改为 SSL 的 connector 的端口，即443端口。如下所示：                                                                                  </p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;Connector port<span class="hljs-operator">=</span><span class="hljs-string">&quot;80&quot;</span> protocol<span class="hljs-operator">=</span><span class="hljs-string">&quot;HTTP/1.1&quot;</span><br>  connectionTimeout<span class="hljs-operator">=</span><span class="hljs-string">&quot;20000&quot;</span><br>  redirectPort<span class="hljs-operator">=</span><span class="hljs-string">&quot;443&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><blockquote><p>说明：              </p><p>此修改操作可将非 SSL 的 connector 跳转到 SSL 的 connector 中。</p></blockquote><p> 目录下执行以下命令，关闭 Tomcat 服务器。                                                                                                               </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">./shutdown.sh<br></code></pre></td></tr></table></figure><p>执行以下命令，确认配置是否存在问题。                                                                                                                   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configtest.sh<br></code></pre></td></tr></table></figure><ul><li>若存在，请您重新配置或者根据提示修改存在问题。</li><li>若不存在，请执行下一步。</li></ul><p>执行以下命令，启动 Tomcat 服务器，即可使用 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>cloud.tencent.com<br></code></pre></td></tr></table></figure><p> 进行访问。                                                                                                               </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./startup.sh<br></code></pre></td></tr></table></figure><h1 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h1><p>添加环境变量</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082205926.png" alt="image-20220907161959334"></p><p>配置默认访问界面</p><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082205723.png" alt="image-20220907162053091"></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;Context path<span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span> docBase<span class="hljs-operator">=</span><span class="hljs-string">&quot;blog/&quot;</span>  reloadable<span class="hljs-operator">=</span><span class="hljs-string">&quot;true&quot;</span> debug<span class="hljs-operator">=</span><span class="hljs-string">&quot;0&quot;</span> crossContext<span class="hljs-operator">=</span><span class="hljs-string">&quot;true&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><h1 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h1><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082205629.png" alt="image-20220926122700969"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#user  nobody;</span><br><span class="hljs-attribute">worker_processes</span>  <span class="hljs-number">1</span>;<br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br><span class="hljs-section">events</span> &#123;<br>    <span class="hljs-attribute">worker_connections</span>  <span class="hljs-number">1024</span>;<br>&#125;<br><br><br><span class="hljs-section">http</span> &#123;<br>    <span class="hljs-attribute">include</span>       mime.types;<br>    <span class="hljs-attribute">default_type</span>  application/octet-stream;<br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br><br>    <span class="hljs-attribute">sendfile</span>        <span class="hljs-literal">on</span>;<br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    <span class="hljs-attribute">keepalive_timeout</span>  <span class="hljs-number">65</span>;<br><br>    <span class="hljs-comment">#gzip  on;</span><br><br>    <span class="hljs-section">server</span> &#123;<br>        <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>        <span class="hljs-attribute">server_name</span>  localhost;<br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        <span class="hljs-section">location</span>  / &#123;<br>            <span class="hljs-attribute">root</span>   /work/class_manager/pc/dist;<br>            <span class="hljs-attribute">index</span>  index.html index.htm;<br>            <span class="hljs-comment">#开启后不会导致刷新白屏</span><br>            <span class="hljs-attribute">try_files</span> <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span>/ /index.html;<br>        &#125;<br><br>        <span class="hljs-comment"># 接口访问路径，解决跨域</span><br>        <span class="hljs-section">location</span> /springbootajax/ &#123;<br>                <span class="hljs-attribute">proxy_pass</span> http://39.105.13.178:8345/springbootajax;<br>        &#125;<br><br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-attribute">error_page</span>   <span class="hljs-number">500</span> <span class="hljs-number">502</span> <span class="hljs-number">503</span> <span class="hljs-number">504</span>  /50x.html;<br>        <span class="hljs-section">location</span> = /50x.html &#123;<br>            <span class="hljs-attribute">root</span>   html;<br>        &#125;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试知识点汇总</title>
    <link href="/post/d3309499.html"/>
    <url>/post/d3309499.html</url>
    
    <content type="html"><![CDATA[<h1 id="东软集团（武汉）有限公司"><a href="#东软集团（武汉）有限公司" class="headerlink" title="东软集团（武汉）有限公司"></a>东软集团（武汉）有限公司</h1><p>介绍一下面向对象 </p><p> 介绍一下知道的IO流 </p><p> 线程的状态 什么时候导致运行状态的改变 </p><p> 为什么要用线程池 </p><p> java集合的分类 说几个常用的集合（没说队列） </p><p> 了解JVM什么 </p><p> 了解一个对象是怎么创建的吗，创建对象的过程 </p><p> BIO NIO区别，阻塞是指什么 </p><p> 怎么定义一个spring的bean </p><p> spring里面如何配置单例 </p><p> spring怎么设置<a href="">数据</a>库的事务 </p><p> 学习的时候喜欢深入学习还是业务完成</p><p> String ， StrinBuffer， Stringbuilder</p><p> IO流</p><p> File类中的方法</p><p> 项目介绍</p><p> SpringBoot的理解</p><p> Android框架</p><p>  线程和进程</p><h1 id="腾讯云智研发"><a href="#腾讯云智研发" class="headerlink" title="腾讯云智研发"></a>腾讯云智研发</h1><p> 三次握手，四次挥手</p><p> TCP特殊报文</p><p> Linux CPU使用率</p><p> 系统调用fork</p><p> 按照文件名查找文件</p><p> 单例模式</p><p> MySQL索引覆盖</p><p> 不适用select * 的原因</p><p> Redis</p><p> 网站输入域名后回车会发生什么</p><p> HTTP协议</p><h1 id="开科支付中心"><a href="#开科支付中心" class="headerlink" title="开科支付中心"></a>开科支付中心</h1><p>  String类中常用方法</p><p>  Array List优缺点</p><p> MySQL查询什么时候走索引（索引覆盖）</p><p> MySQL中float 和 double</p><p> Sping AOP 的使用场景</p><p> Spring常用注解</p><p> Ajax前后端交互</p><p> Linux常用命令</p><p> SpringIOC</p><p> MySQL主从复制实现原理</p><p> Redis的作用，举例</p><p> Redis缓存击穿，缓存穿透，缓存雪崩</p><p> 事务的隔离级别</p><p> 脏读，幻读，不可重复读</p><p> PutMapping，GetMapping等，及使用它们的原因</p><p> 状态介绍 300 400 500</p>]]></content>
    
    
    <categories>
      
      <category>面试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器部署常见命令</title>
    <link href="/post/1a17ef30.html"/>
    <url>/post/1a17ef30.html</url>
    
    <content type="html"><![CDATA[<h1 id="服务器部署常见命令"><a href="#服务器部署常见命令" class="headerlink" title="服务器部署常见命令"></a>服务器部署常见命令</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">nohup <span class="hljs-keyword">java </span>-<span class="hljs-keyword">jar </span>工程.<span class="hljs-keyword">jar </span>&amp;&gt;slan.log &amp;<br></code></pre></td></tr></table></figure><p>nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行，</p><p>当用 nohup 命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中，除非另外指定了输出文件。</p><p><strong>其它常用方法</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netstat <span class="hljs-literal">-tunlp</span> | grep ××  查询出端口为××在运行应用的线程ip<br><span class="hljs-built_in">kill</span> <span class="hljs-literal">-9</span> ××   关闭线程ip 为 ××的应用<br><span class="hljs-built_in">rm</span> <span class="hljs-operator">-f</span> ××.jar 移除×× .jar 文件<br>java <span class="hljs-literal">-jar</span> NettyAPI.jar <span class="hljs-literal">-server</span>.port=<span class="hljs-number">9898</span><br></code></pre></td></tr></table></figure><p><strong>部署完成</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> -ef| <span class="hljs-keyword">grep</span> java 查看是否部置成功<br></code></pre></td></tr></table></figure><p><strong>配至访问端口</strong></p><h4 id="rpm文件命令"><a href="#rpm文件命令" class="headerlink" title="rpm文件命令"></a>rpm文件命令</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br>RPM 安装操作命令： <br><br>rpm -<span class="hljs-selector-tag">i</span> 需要安装的包文件名<br><br>举例如下：<br><br>rpm -<span class="hljs-selector-tag">i</span> example<span class="hljs-selector-class">.rpm</span> 安装 example<span class="hljs-selector-class">.rpm</span> 包； <br><br>rpm -iv example<span class="hljs-selector-class">.rpm</span> 安装 example<span class="hljs-selector-class">.rpm</span> 包并在安装过程中显示正在安装的文件信息； <br><br>rpm -ivh example<span class="hljs-selector-class">.rpm</span> 安装 example<span class="hljs-selector-class">.rpm</span> 包并在安装过程中显示正在安装的文件信息及安装进度； <br></code></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">.\startup.cmd -m standalone<br><span class="hljs-built_in"></span><br><span class="hljs-built_in">031025375070,</span><span class="hljs-number">211905375145</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>服务器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署项目至GitHub</title>
    <link href="/post/14fc6d5d.html"/>
    <url>/post/14fc6d5d.html</url>
    
    <content type="html"><![CDATA[<h3 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repository:</span> git@github.com:Saln137/Saln137.github.io.git<br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><h3 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 hexo-deployer-git</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo c</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br><br></code></pre></td></tr></table></figure><h3 id="Typora图片设置"><a href="#Typora图片设置" class="headerlink" title="Typora图片设置"></a>Typora图片设置</h3><img src="/post/14fc6d5d/image-20221008191910405.png" class="" title="image-20221008191910405"><h3 id="Typora上传图片至腾讯云COS"><a href="#Typora上传图片至腾讯云COS" class="headerlink" title="Typora上传图片至腾讯云COS"></a>Typora上传图片至腾讯云COS</h3><p><img src="https://blog-1310995062.cos.ap-chongqing.myqcloud.com/images202210082100754.png" alt="image-20221008210045938"></p>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 写作</title>
    <link href="/post/3917aff.html"/>
    <url>/post/3917aff.html</url>
    
    <content type="html"><![CDATA[<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br></code></pre></td></tr></table></figure><h3 id="生成markdown文件"><a href="#生成markdown文件" class="headerlink" title="生成markdown文件"></a>生成markdown文件</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> <span class="hljs-string">&quot;post title&quot;</span> <br></code></pre></td></tr></table></figure><h3 id="生成草稿页面"><a href="#生成草稿页面" class="headerlink" title="生成草稿页面"></a>生成草稿页面</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">draft</span> <span class="hljs-string">&quot;draft title&quot;</span> <br></code></pre></td></tr></table></figure><h3 id="生成网页页面"><a href="#生成网页页面" class="headerlink" title="生成网页页面"></a>生成网页页面</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;page title&quot;</span> <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
